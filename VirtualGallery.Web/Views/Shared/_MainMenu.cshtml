@using VirtualGallery.Infrastructure.Localization
@using VirtualGallery.Web.Models
@model MainMenuKey
<ul class="menu-tabs">
    <li>
        <a class="menu-tab @(Model == MainMenuKey.Main ? "active" : string.Empty)" 
           href="@Url.Action(MVC.Home.Index())">@Localization.Nav_Main</a>
    </li>
    <li>
        <a class="menu-tab @(Model == MainMenuKey.Prices ? "active" : string.Empty)" 
           href="#@MainMenuKey.Prices">@Localization.Nav_Prices</a>
    </li>
    <li>
        <a class="menu-tab @(Model == MainMenuKey.ShoppingCart ? "active" : string.Empty)" 
           href="#@MainMenuKey.ShoppingCart">@Localization.Nav_ShoppingCart</a>
    </li>
</ul>
<div class="clear"></div>

<script type="text/javascript">
    var shoppingCartSelector = ".menu-tabs a[href='#@MainMenuKey.ShoppingCart'].menu-tab";
    var ShoppingCart = new ShoppingCart(shoppingCartSelector, "@Localization.Nav_ShoppingCart");
    ShoppingCart.refresh();

    $(document).ready(function () {
        var $mainMenus = $(".menu-tabs .menu-tab");

        var selectMenu = function ($menu) {
            $mainMenus.removeClass("active");
            $menu.addClass("active");
        };

        $mainMenus.click(function() {
            selectMenu($(this));
        });

        @if (ViewBag.AllowEdit) {
            <text>

                $(shoppingCartSelector).click(function (e) {

                    var $dialog = $('#@MainMenuKey.ShoppingCart'), $this = $(this);
                    if ($dialog) {
                        $dialog.detach().remove();
                    }

                    $.ajax({
                        type: "GET",
                        cache: false,
                        url: "@Url.Action(MVC.ShoppingCart.ActionNames.Orders, MVC.ShoppingCart.Name)"
                    })
                    .done(function (result) {
                        if (typeof (result) === "string") {
                            $('.dialogs').append(result);
                            $('#@MainMenuKey.ShoppingCart').reveal($this.data());
                        } else {
                            alert(result.ErrorMessage);
                        }
                    });
                });
            </text>
        }
        else {
            <text>

        $(shoppingCartSelector).click(function (e) {
            if (!ShoppingCart.gets().length) {
                e.preventDefault();
                return false;
            }

            var $dialog = $('#@MainMenuKey.ShoppingCart'), $this = $(this);
            if ($dialog) {
                $dialog.detach().remove();
            }

            var data = {};
            $.each(ShoppingCart.gets(), function (index, item) {
                data["Pictures[" + index + "]"] = item;
            });

            $.ajax({
                type: "POST",
                cache: false,
                url: "@Url.Action(MVC.ShoppingCart.ActionNames.CartDialog, MVC.ShoppingCart.Name)",
                        data: data
                    })
                    .done(function (result) {
                        if (typeof (result) === "string") {
                            $('.dialogs').append(result);
                            $('#@MainMenuKey.ShoppingCart').reveal($this.data());
                        } else {
                            alert(result.ErrorMessage);
                        }
                    });
                });
            </text>
        }

        if (window.location.hash == '#@MainMenuKey.Prices') {
            selectMenu($mainMenus.filter("a[href='#@MainMenuKey.Prices']"));
        }

        if (window.location.hash == '#@MainMenuKey.ShoppingCart') {
            $(shoppingCartSelector).click();
        }

    });
</script>